name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request_target:
    branches: [ "master", "main" ]
    paths-ignore: [ "docs/**" ]

  push:
    branches: [ "master", "main" ]
    paths-ignore: [ "docs/**" ]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  check-formatter:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Start Postgres
        run:  docker-compose -f local.yml up -d postgres

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: "requirements/local.txt"

      - name: Install Deps
        run: pip install -r requirements/local.txt

      - name: Run Formatter
        run:  black --check .

  pre-commit:
    runs-on: ubuntu-22.04
    needs: check-formatter
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: "requirements/local.txt"

      - name: Install Deps
        run: pip install -r requirements/local.txt

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.0

  testing-linting-scanning:
    runs-on: ubuntu-22.04
    needs: [check-formatter, pre-commit]
    env:
      DATABASE_URL: "postgres://certango:certango@127.0.0.1/certango"
      USE_DOCKER: yes
      IPYTHONDIR: /app/.ipython
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Start Postgres
        run:  docker-compose -f local.yml up -d postgres

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: "requirements/local.txt"

      - name: Install Deps
        run: pip install -r requirements/local.txt

      - name: Run DB Migrations
        run:  python manage.py migrate

      - name: Run Django Tests and generate coverage
        run: tox -e py

      - name: Flake8
        continue-on-error: true
        run: flake8 --output-file flake8.txt

      - name: PyLint
        continue-on-error: true
        run: pylint **/*.py --output pylint.txt

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
